{"version":3,"sources":["services/blogs.js","reducers/blogReducer.js","components/Blog.js","components/Notification.js","components/Togglable.js","reducers/notificationReducer.js","components/NewBlog.js","services/login.js","App.js","store.js","index.js"],"names":["baseUrl","token","create","newObject","a","config","headers","Authorization","axios","post","request","data","getAll","get","then","response","update","put","id","setToken","newToken","remove","delete","addBlog","blog","dispatch","blogService","newBlog","type","blogReducer","state","action","console","log","find","updatedBlog","likes","map","filter","Blog","own","useState","visible","setVisible","useDispatch","handleLike","user","likeBlog","handleRemove","window","confirm","title","author","label","style","paddingTop","paddingLeft","border","borderWidth","marginBottom","className","onClick","url","name","connect","notification","props","borderStyle","borderRadius","padding","color","background","message","Togglable","React","forwardRef","ref","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","displayName","timeout","NewBlog","setTitle","setAuthor","setUrl","onSubmit","event","preventDefault","createBlog","value","onChange","target","login","credentials","noti","time","clearTimeout","setTimeout","notificatonReducer","App","setUser","username","setUsername","password","setPassword","blogFormRef","createRef","useSelector","blogs","useEffect","loggedUserJSON","localStorage","getItem","JSON","parse","handleLogin","loginService","setItem","stringify","current","exception","removeItem","sort","b1","b2","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0dc1b261.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const request = await axios.post(baseUrl, newObject, config)\r\n  return request.data\r\n}\r\n\r\nconst update = (newObject) => {\r\n  const request = axios.put(`${baseUrl}/${newObject.id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const request = axios.delete(`${baseUrl}/${id}`, config)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, setToken, remove }","import blogService from '../services/blogs'\r\n\r\nconst blogReducer = (state = [], action) => {\r\n    console.log('blogReducer', action)\r\n    switch (action.type) {\r\n        case 'INIT_BLOGS':\r\n            return action.data\r\n        case 'CREATE_BLOG':\r\n            return [...state, action.data]\r\n        case 'LIKE_BLOG':\r\n            const id = action.data\r\n            const blog = state.find(blog => blog.id === id)\r\n            const updatedBlog = { ...blog, likes: blog.likes + 1 }\r\n            return state.map(blog => blog.id === id ? updatedBlog : blog)\r\n        case 'REMOVE_BLOG':\r\n            return state.filter(id => id !== action.data)\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializeBlogs = () => {\r\n    return async dispatch => {\r\n        const blogs = await blogService.getAll()\r\n        dispatch({\r\n            type: 'INIT_BLOGS',\r\n            data: blogs\r\n        })\r\n    }\r\n}\r\n\r\nexport const addBlog = (blog) => {\r\n    return async dispatch => {\r\n        const newBlog = await blogService.create(blog)\r\n        dispatch({\r\n            type: 'CREATE_BLOG',\r\n            data: newBlog\r\n        })\r\n    }\r\n}\r\n\r\nexport const likeBlog = (blog) => {\r\n    return async dispatch => {\r\n        await blogService.update(blog)\r\n        dispatch({\r\n            type: 'LIKE_BLOG',\r\n            data: blog.id\r\n        })\r\n    }\r\n}\r\n\r\nexport const removeBlog = (id) => {\r\n    return async dispatch => {\r\n        await blogService.remove(id)\r\n        dispatch({\r\n            type: 'REMOVE_BLOG',\r\n            data: id\r\n        })\r\n    }\r\n}\r\n\r\nexport default blogReducer\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useDispatch } from 'react-redux'\r\nimport { likeBlog, removeBlog } from '../reducers/blogReducer'\r\n\r\nconst Blog = ({ blog, own }) => {\r\n  const [visible, setVisible] = useState(false)\r\n  const dispatch = useDispatch()\r\n\r\n  const blogStyle = {\r\n    paddingTop: 10,\r\n    paddingLeft: 2,\r\n    border: 'solid',\r\n    borderWidth: 1,\r\n    marginBottom: 5\r\n  }\r\n\r\n  const handleLike = (blog) => {\r\n    const updatedBlog = { ...blog, likes: blog.likes + 1, user: blog.user.id }\r\n    dispatch(likeBlog(updatedBlog))\r\n  }\r\n\r\n  const handleRemove = (blog) => {\r\n    const ok = window.confirm(`Remove blog ${blog.title} by ${blog.author}`)\r\n    if (ok) {\r\n      dispatch(removeBlog(blog.id))\r\n    }\r\n  }\r\n\r\n  const label = visible ? 'hide' : 'view'\r\n\r\n  return (\r\n    <div style={blogStyle} className='blog'>\r\n      <div>\r\n        <i>{blog.title}</i> by {blog.author} <button onClick={() => setVisible(!visible)}>{label}</button>\r\n      </div>\r\n      {visible&&(\r\n        <div>\r\n          <div>{blog.url}</div>\r\n          <div>likes {blog.likes}\r\n            <button onClick={()=>handleLike(blog)}>like</button>\r\n          </div>\r\n          <div>{blog.user.name}</div>\r\n          {own&&<button onClick={()=>handleRemove(blog)}>remove</button>}\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nBlog.propTypes = {\r\n  blog: PropTypes.shape({\r\n    title: PropTypes.string.isRequired,\r\n    author: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  own: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default Blog","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Notification = (props) => {\r\n  if ( !props.notification ) {\r\n    return null\r\n  }\r\n\r\n  const style = {\r\n    borderStyle: 'solid',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    color: props.notification.color === 'success' ? 'green' : 'red',\r\n    background: 'lightgrey'\r\n  }\r\n\r\n  return <div style={style}>\r\n    {props.notification.message}\r\n  </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    notification: state.notification\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Notification)","import React, { useState, useImperativeHandle } from 'react'\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n      </div>\r\n      <div style={showWhenVisible} className=\"togglableContent\">\r\n        {props.children}\r\n        <button onClick={toggleVisibility}>cancel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nTogglable.displayName = 'Togglable'\r\n\r\nexport default Togglable","let timeout\r\n\r\nconst notificatonReducer = (state = null, action) => {\r\n    switch (action.type) {\r\n        case 'SHOW_NOTI':\r\n            return action.data\r\n        case 'HIDE_NOTI':\r\n            return null\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const noti = (noti, time, color) => {\r\n    return async (dispatch) => {\r\n        dispatch({\r\n            type: 'SHOW_NOTI',\r\n            data: {\r\n                message: noti,\r\n                color: color\r\n            }\r\n        })\r\n        clearTimeout(timeout)\r\n        timeout = setTimeout(() => {\r\n            dispatch({\r\n                type: 'HIDE_NOTI'\r\n            })\r\n        }, time)\r\n    }\r\n}\r\n\r\nexport const hide = () => {\r\n    return {\r\n        type: 'HIDE_NOTI',\r\n    }\r\n}\r\n\r\nexport default notificatonReducer","import React, { useState } from 'react'\r\n\r\nconst NewBlog = (props) => {\r\n  const [title, setTitle] = useState('')\r\n  const [author, setAuthor] = useState('')\r\n  const [url, setUrl] = useState('')\r\n\r\n  const handleNewBlog = (event) => {\r\n    event.preventDefault()\r\n\r\n    props.createBlog({\r\n      title, author, url\r\n    })\r\n\r\n    setTitle('')\r\n    setAuthor('')\r\n    setUrl('')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>create new</h2>\r\n      <form onSubmit={handleNewBlog}>\r\n        <div>\r\n          author\r\n          <input\r\n            id='author'\r\n            value={author}\r\n            onChange={({ target }) => setAuthor(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          title\r\n          <input\r\n            id='title'\r\n            value={title}\r\n            onChange={({ target }) => setTitle(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          url\r\n          <input\r\n            id='url'\r\n            value={url}\r\n            onChange={({ target }) => setUrl(target.value)}\r\n          />\r\n        </div>\r\n        <button id=\"create\">create</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewBlog","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport Notification from './components/Notification'\nimport Togglable from './components/Togglable'\nimport NewBlog from './components/NewBlog'\n\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { noti } from './reducers/notificationReducer'\nimport { initializeBlogs, addBlog, likeBlog, removeBlog } from './reducers/blogReducer'\n\nconst App = () => {\n  const [user, setUser] = useState(null)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const blogFormRef = React.createRef()\n  \n  const dispatch = useDispatch()\n  const blog = useSelector(state => state.blogs)\n\n  useEffect(() => {\n    dispatch(initializeBlogs())\n  }, [dispatch])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password\n      })\n\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      )\n\n      blogService.setToken(user.token)\n      setUsername('')\n      setPassword('')\n      setUser(user)\n      dispatch(noti(`${user.name} welcome back!`, 5000, 'success'))\n    } catch(exception) {\n      dispatch(noti('wrong username/password', 5000, 'error'))\n    }\n  }\n\n  const createBlog = async (blog) => {\n    try {\n      blogFormRef.current.toggleVisibility()\n      dispatch(addBlog(blog))\n      dispatch(noti(`a new blog '${blog.title}' by ${blog.author} added!`, 5000, 'success'))\n    } catch(exception) {\n      console.log(exception)\n      dispatch(noti('something went wrong', 5000, 'error'))\n    }\n  }\n\n  const handleLogout = () => {\n    window.localStorage.removeItem('loggedNoteappUser')\n    setUser(null)\n  }\n\n  if ( !user ) {\n    return (\n      <div>\n        <h2>login to application</h2>\n\n        <Notification />\n\n        <form onSubmit={handleLogin}>\n          <div>\n            username\n            <input\n              id='username'\n              value={username}\n              onChange={({ target }) => setUsername(target.value)}\n            />\n          </div>\n          <div>\n            password\n            <input\n              id='password'\n              value={password}\n              onChange={({ target }) => setPassword(target.value)}\n            />\n          </div>\n          <button id='login'>login</button>\n        </form>\n      </div>\n    )\n  }\n\n  const byLikes = (b1, b2) => b2.likes - b1.likes\n\n  return (\n    <div>\n      <h2>blogs</h2>\n\n      <Notification />\n\n      <p>\n        {user.name} logged in <button onClick={handleLogout}>logout</button>\n      </p>\n\n      <Togglable buttonLabel='create new blog'  ref={blogFormRef}>\n        <NewBlog createBlog={createBlog} />\n      </Togglable>\n\n      {blog.sort(byLikes).map(blog =>\n        <Blog\n          key={blog.id}\n          blog={blog}\n          own={user.username===blog.user.username}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default App","import { createStore, combineReducers, applyMiddleware } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport { composeWithDevTools } from \"redux-devtools-extension\"\r\nimport notificatonReducer from \"./reducers/notificationReducer\"\r\nimport blogReducer from \"./reducers/blogReducer\"\r\n\r\nconst reducer = combineReducers({\r\n    notification: notificatonReducer,\r\n    blogs: blogReducer\r\n})\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}